#!/usr/bin/env python3
"""
CLI launcher for preprint_bot.preprint_bot_summarization
Allows running from command line without directly calling the module.
"""

import argparse
from pathlib import Path
from preprint_bot.summarization_script import process_folder, TransformerSummarizer, LlamaSummarizer

def main():
    parser = argparse.ArgumentParser(description="Summarize text files using transformer or local LLaMA.")
    parser.add_argument("--input_folder", type=str, required=True, help="Folder containing input .txt files")
    parser.add_argument("--output_folder", type=str, default="summaries", help="Folder to save summaries")
    parser.add_argument("--max_length", type=int, default=180, help="Max summary length per section")
    parser.add_argument("--mode", type=str, choices=["transformer", "llama"], default="transformer",
                        help="Choose summarization mode: transformer (default) or llama")

    args = parser.parse_args()

    if args.mode == "transformer":
        summarizer = TransformerSummarizer()
    else:
        # Use fixed LLaMA model path
        model_path = Path("models") / "llama-3.2-1b-instruct-q4_k_m.gguf"
        if not model_path.exists():
            raise FileNotFoundError(f"LLaMA model not found: {model_path}")
        summarizer = LlamaSummarizer(model_path)

    process_folder(args.input_folder, args.output_folder, summarizer, max_length=args.max_length)


if __name__ == "__main__":
    main()
